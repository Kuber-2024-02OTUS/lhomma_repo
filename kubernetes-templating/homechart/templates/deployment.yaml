apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.deployment.name }}
  labels:
    name: nginx
  namespace: {{ .Values.namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: nginx
  strategy:
    type: {{ .Values.deployment.strategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.deployment.strategy.maxUnavailable }}
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccountName: {{ .Values.serviceAccount.monitoring.name }}
      containers:
        - name: {{ .Values.container.name }}
          image: {{ .Values.image.name }}:{{ .Values.image.tag }}
          command: ["/bin/sh", "-c"]
          args: ["sed -i 's/listen .*/listen 8000;/g ; s,root .*,root /homework;,g' /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"]
          ports:
            - name: {{ .Values.container.port.name }}
              containerPort: {{ .Values.container.port.containerPort }}
          volumeMounts:
            - name: {{ .Values.volumes.pvName }}
              mountPath: "/homework"
            - name: {{ .Values.volumes.pvCMName }}
              mountPath: "/homework/conf"
          {{ if .Values.readinessProbe.enabled -}}
          readinessProbe:
            httpGet:
              path: /index.html
              port: {{ .Values.container.port.name }}
            initialDelaySeconds: 5
            periodSeconds: 5
          {{- end }}
          lifecycle:
            preStop:
              exec:
                command: ["rm", "-f", "/homework/index.html"]
      initContainers:
        - name: {{ .Values.initContainer.name }}
          image: '{{ .Values.initContainer.image }}:{{ .Values.initContainer.tag }}'
          command: ["wget", "-O", "/init/index.html", "http://info.cern.ch"]
          volumeMounts:
            - name: {{ .Values.volumes.pvName }}
              mountPath: "/init"
      dnsPolicy: Default
      volumes:
        - name: {{ .Values.volumes.pvName }}
          persistentVolumeClaim:
            claimName: {{ .Values.volumes.pvcName }}
        - name: {{ .Values.volumes.pvCMName }}
          configMap:
            name: {{ .Values.volumes.configmap.name }}
            {{- with .Values.volumes.configmap.items }}
            items:
              {{- toYaml . | nindent 12 }}
            {{- end }}
#            - key: file
#              path: file
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
